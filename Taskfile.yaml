version: "3"

env:
  SYNTHEA_POPULATION_SIZE: 1000

vars:
  # only here as a comment. not yet used to loop through all at once.
  SYNTHEA_POPULATION_SIZES:
    - 1000
    - 5000
    - 10000
    - 50000
    - 100000

tasks:
  install-dependencies:
    cmds:
      - curl -LO https://github.com/synthetichealth/synthea/releases/download/master-branch-latest/synthea-with-dependencies.jar
      - curl -LO https://repo1.maven.org/maven2/io/trino/trino-cli/453/trino-cli-453-executable.jar
      - curl -LO https://github.com/samply/blazectl/releases/download/v0.16.0/blazectl-0.16.0-linux-amd64.tar.gz
      - tar xzf blazectl-0.16.0-linux-amd64.tar.gz
      - rm blazectl-0.16.0-linux-amd64.tar.gz
      - ./blazectl --version
      - pip install -r requirements.txt
    generates:
      - synthea-with-dependencies.jar
      - blazectl
      - trino-cli-453-executable.jar

  # TODO: could use a task loop to generate synthea data for all sizes at once.
  generate-fhir-data:
    cmds:
      - java -jar synthea-with-dependencies.jar -s 20240711 -cs 20240711 -r 20240711 -p "${SYNTHEA_POPULATION_SIZE}" -c config/synthea.properties --exporter.baseDirectory="./synthea/output-${SYNTHEA_POPULATION_SIZE}/bulk" --exporter.fhir.bulk_data="true"
      - java -jar synthea-with-dependencies.jar -s 20240711 -cs 20240711 -r 20240711 -p "${SYNTHEA_POPULATION_SIZE}" -c config/synthea.properties --exporter.baseDirectory="./synthea/output-${SYNTHEA_POPULATION_SIZE}/transactions" --exporter.fhir.bulk_data="false"

  start-servers:
    cmds:
      - docker compose -f compose.blaze.yaml -f compose.pathling.yaml -f compose.trino.yaml up -d
      # after the import is done, we no longer need the pathling server itself
      - docker compose -f compose.pathling.yaml stop pathling

  upload-fhir-data:
    cmds:
      # blaze
      # hospitalInformation & practitionerInformation are required for referential integrity.
      - curl -X POST --header 'Content-Type:application/fhir+json' --data @"$(find synthea/output-${SYNTHEA_POPULATION_SIZE}/transactions/fhir/ -name 'hospitalInformation*.json')" --url 'http://localhost:8083/fhir'
      - curl -X POST --header 'Content-Type:application/fhir+json' --data @"$(find synthea/output-${SYNTHEA_POPULATION_SIZE}/transactions/fhir/ -name 'practitionerInformation*.json')" --url 'http://localhost:8083/fhir'
      - ./blazectl upload --no-progress --concurrency 32 synthea/output-${SYNTHEA_POPULATION_SIZE}/transactions/fhir/ --server http://localhost:8083/fhir
      # hapi fhir jpa
      # - curl -X POST --header 'Content-Type:application/fhir+json' --data @"$(find output/transactions/fhir/ -name 'hospitalInformation*.json')" --url 'http://localhost:8084/fhir'
      # - curl -X POST --header 'Content-Type:application/fhir+json' --data @"$(find output/transactions/fhir/ -name 'practitionerInformation*.json')" --url 'http://localhost:8084/fhir'
      # - ./blazectl upload output/transactions/fhir/ --server http://localhost:8084/fhir

  remove-local-synthea-files:
    cmds:
      - rm -r synthea/

  run-benchmarks:
    dir: src/
    cmds:
      - python main.py

  draw-plots:
    dir: src/
    cmds:
      - python plot.py

  run:
    cmds:
      - task: install-dependencies
      - task: generate-fhir-data
      - task: start-servers
      - task: upload-fhir-data
      - task: remove-local-synthea-files
      - task: run-benchmarks
      - task: draw-plots
      - task: clean

  clean:
    cmds:
      - docker compose -f compose.blaze.yaml -f compose.pathling.yaml -f compose.trino.yaml down -v --remove-orphans
